"""main_tables

Revision ID: 45d98cfa7cc7
Revises: 
Create Date: 2021-10-22 22:07:52.341961

Doc: https://alembic.sqlalchemy.org/en/latest/tutorial.html#create-a-migration-script
"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

revision = "45d98cfa7cc7"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("token", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "comment",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("data", sa.String(), nullable=False),
        sa.Column("user_uuid", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("created_datetime", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_uuid"],
            ["user.uuid"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "event",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("creator", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=False),
        sa.Column(
            "scope",
            sa.Enum("cultural", "board_games", name="scopeenum"),
            nullable=False,
        ),
        sa.Column("created_datetime", sa.DateTime(timezone=True), nullable=False),
        sa.Column("event_datetime", sa.DateTime(timezone=True), nullable=False),
        sa.Column("is_approved", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["creator"],
            ["user.uuid"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "moderator",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_uuid", postgresql.UUID(as_uuid=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_uuid"],
            ["user.uuid"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_event_association",
        sa.Column("user_uuid", postgresql.UUID(), nullable=False),
        sa.Column("event_uuid", postgresql.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_uuid"],
            ["event.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"],
            ["user.uuid"],
        ),
        sa.PrimaryKeyConstraint("user_uuid", "event_uuid"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_event_association")
    op.drop_table("moderator")
    op.drop_table("event")
    op.drop_table("comment")
    op.drop_table("user")
    # ### end Alembic commands ###
